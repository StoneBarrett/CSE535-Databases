-- MySQL Script generated by MySQL Workbench
-- Tue Apr 19 18:49:53 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema CECSProject
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema CECSProject
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `CECSProject` DEFAULT CHARACTER SET utf8 ;
USE `CECSProject` ;

-- -----------------------------------------------------
-- Table `CECSProject`.`CUSTOMER`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CECSProject`.`CUSTOMER` (
  `cust-id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `zip` VARCHAR(45) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cust-id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CECSProject`.`HOTEL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CECSProject`.`HOTEL` (
  `hotelid` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(45) NOT NULL,
  `manager-name` VARCHAR(45) NOT NULL,
  `number-rooms` INT UNSIGNED NOT NULL,
  `amenities` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`hotelid`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CECSProject`.`RESERVATION`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CECSProject`.`RESERVATION` (
  `hotelid` INT UNSIGNED NOT NULL,
  `cust-id` INT UNSIGNED NOT NULL,
  `room-number` INT UNSIGNED NOT NULL,
  `begin-date` DATE NOT NULL,
  `end-date` DATE NOT NULL,
  `credit-card-number` VARCHAR(45) NOT NULL,
  `exp-date` DATE NOT NULL,
  INDEX `hotelid_idx` (`hotelid` ASC, `room-number` ASC) VISIBLE,
  PRIMARY KEY (`room-number`, `begin-date`, `hotelid`),
  CONSTRAINT `hotelid-roomnum`
    FOREIGN KEY (`hotelid` , `room-number`)
    REFERENCES `CECSProject`.`ROOM` (`hotel-id` , `number`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CECSProject`.`REVENUE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CECSProject`.`REVENUE` (
  `hotelid` INT UNSIGNED NOT NULL DEFAULT 1,
  `total` DECIMAL UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`hotelid`, `total`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CECSProject`.`ROOM`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CECSProject`.`ROOM` (
  `number` INT UNSIGNED NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `occupancy` INT UNSIGNED NOT NULL,
  `number-beds` INT UNSIGNED NOT NULL,
  `type-beds` VARCHAR(45) NOT NULL,
  `price` DECIMAL UNSIGNED NOT NULL,
  `hotel-id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`number`, `hotel-id`),
  INDEX `hotel-id_idx` (`hotel-id` ASC) VISIBLE,
  CONSTRAINT `hotel-id`
    FOREIGN KEY (`hotel-id`)
    REFERENCES `CECSProject`.`HOTEL` (`hotelid`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `CECSProject` ;

-- -----------------------------------------------------
-- procedure Occupancy
-- -----------------------------------------------------

DELIMITER $$
USE `CECSProject`$$
CREATE PROCEDURE `Occupancy` (in `hotel-id` INT, `date` DATE)
BEGIN
SELECT count(RESERVATION.`room-number`)
FROM RESERVATION
WHERE `hotel-id` = RESERVATION.`hotel-id` and `date` between RESERVATION.`begin-date` and RESERVATION.`end-date`;
END$$

DELIMITER ;
USE `CECSProject`;

DELIMITER $$
USE `CECSProject`$$
CREATE DEFINER = CURRENT_USER TRIGGER `CECSProject`.`CUSTOMER_BEFORE_INSERT` BEFORE INSERT ON `CUSTOMER` FOR EACH ROW
BEGIN
IF NEW.`status` != "gold" and NEW.`status` != "silver" and NEW.`status` != "business" THEN SIGNAL sqlstate "45000";
END IF;
END$$

USE `CECSProject`$$
CREATE DEFINER = CURRENT_USER TRIGGER `CECSProject`.`RESERVATION_BEFORE_INSERT` BEFORE INSERT ON `RESERVATION` FOR EACH ROW
BEGIN
IF NEW.`begin-date` > NEW.`end-date` THEN SIGNAL sqlstate "45000";
END IF;
END$$

USE `CECSProject`$$
CREATE DEFINER = CURRENT_USER TRIGGER `CECSProject`.`RESERVATION_AFTER_INSERT` AFTER INSERT ON `RESERVATION` FOR EACH ROW
BEGIN
UPDATE REVENUE 
SET REVENUE.`total` = REVENUE.`total` + (SELECT `price` * datediff(NEW.`end-date`, NEW.`begin-date`)
										FROM ROOM
										WHERE NEW.`hotelid` = ROOM.`hotel-id` and NEW.`room-number` = ROOM.`number`)
WHERE REVENUE.`hotelid` = NEW.`hotelid`;
END$$

USE `CECSProject`$$
CREATE DEFINER = CURRENT_USER TRIGGER `CECSProject`.`ROOM_BEFORE_INSERT` BEFORE INSERT ON `ROOM` FOR EACH ROW
BEGIN
IF NEW.`type` != "regular" and NEW.`type` != "extra" and NEW.`type` != "suite" and NEW.`type` != "business" and NEW.`type` != "luxury" and NEW.`type` != "family" THEN SIGNAL sqlstate '45000';
END IF;
IF NEW.`occupancy` < 1 or NEW.`occupancy` > 5 THEN SIGNAL sqlstate '45000';
END IF;
IF NEW.`number-beds` < 1 or NEW.`number-beds` > 3 THEN SIGNAL sqlstate '45000';
END IF;
IF NEW.`type-beds` != "queen" and NEW.`type-beds` != "king" and NEW.`type-beds` != "full" THEN SIGNAL sqlstate '45000';
END IF;
END$$


DELIMITER ;
CREATE USER 'cecs535' IDENTIFIED BY 'taforever';

GRANT ALL ON `CECSProject`.* TO 'cecs535';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
